96. Unique Binary Search Trees


Given n, how many structurally unique BST's (binary search trees) that store values 1...n?

For example,
Given n = 3, there are a total of 5 unique BST's.

   1         3     3      2      1
    \       /     /      / \      \
     3     2     1      1   3      2
    /     /       \                 \
   2     1         2                 3




public class Solution {
    public int NumTrees(int n) {
        if(n<=1)return 1;
        int[] dp = new int[n+1];
        dp[0]=1;
        dp[1]=1;
        
        for(int i=2;i<=n;i++){
            int left = 0;
            int right = i-1;
            
            while(left<right){
                dp[i]+=dp[left++]*dp[right--]*2;
            }
            if(left==right){
                dp[i]+=dp[left]*dp[right];
            }
            
        }
        return dp[n];
    }
}