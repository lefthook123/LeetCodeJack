144. Binary Tree Preorder Traversal


Given a binary tree, return the preorder traversal of its nodes' values.

For example:
Given binary tree {1,#,2,3},
   1
    \
     2
    /
   3
return [1,2,3].

Note: Recursive solution is trivial, could you do it iteratively?


/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public IList<int> PreorderTraversal(TreeNode root) {
        Stack<TreeNode> st = new Stack<TreeNode>();
        IList<int> result = new List<int>();
        if(root==null)return result;
        st.Push(root);
        
        while(st.Count>0){
            TreeNode tn = st.Pop();
            result.Add(tn.val);
            if(tn.right!=null){
                st.Push(tn.right);
            }
            if(tn.left!=null){
                st.Push(tn.left);
            }
        }
        return result;
        
    }
}
