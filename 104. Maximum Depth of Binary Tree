/*
104. Maximum Depth of Binary Tree

Given a binary tree, find its maximum depth.

The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.

*/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int x) { val = x; }
 * }
 */


 //BFS
public class Solution {
    public int MaxDepth(TreeNode root) {
        Queue<TreeNode> q = new Queue<TreeNode>();
        if(root==null)return 0;
        q.Enqueue(root);
        int level=0;
        while(q.Count>0){
            int size = q.Count;
            level++;
            for(int i=0;i<size;i++){
                TreeNode tn = q.Dequeue();
                if(tn.left!=null){
                    q.Enqueue(tn.left);
                }
                if(tn.right!=null){
                    q.Enqueue(tn.right);
                }
            }
        }
        return level;
    }
}

//DFS
public class Solution {
    public int MaxDepth(TreeNode root) {
        if(root==null)return 0;
        return Math.Max(MaxDepth(root.left),MaxDepth(root.right))+1;
    }
}

