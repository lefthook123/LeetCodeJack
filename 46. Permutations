46. Permutations

Given a collection of distinct numbers, return all possible permutations.

For example,
[1,2,3] have the following permutations:
[1,2,3], [1,3,2], [2,1,3], [2,3,1], [3,1,2], and [3,2,1].



public class Solution {
    public IList<IList<int>> Permute(int[] nums) {
        IList<IList<int>> result = new List<IList<int>>();
        IList<int> temp = new List<int>();
        HashSet<int> ht = new HashSet<int>();
        Permute(result,temp,ht,nums);
        return result;
    }
    
    public void Permute(IList<IList<int>> result, IList<int> temp, HashSet<int> ht,int[] nums){
        if(temp.Count==nums.Length){
            result.Add(new List<int>(temp));return;
        }
        for(int i=0;i<nums.Length;i++){
            if(!ht.Contains(nums[i])){
                ht.Add(nums[i]);
                temp.Add(nums[i]);
                Permute(result,temp,ht,nums);
                ht.Remove(nums[i]);
                temp.RemoveAt(temp.Count-1);
            }
            
        }
        
    }
}