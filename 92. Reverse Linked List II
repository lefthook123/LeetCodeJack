92. Reverse Linked List II


Reverse a linked list from position m to n. Do it in-place and in one-pass.

For example:
Given 1->2->3->4->5->NULL, m = 2 and n = 4,

return 1->4->3->2->5->NULL.

Note:
Given m, n satisfy the following condition:
1 ≤ m ≤ n ≤ length of list.



/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode ReverseBetween(ListNode head, int m, int n) {
        
        ListNode dummy = new ListNode(-1);
        dummy.next=head;
        ListNode curr = dummy;
        ListNode prev = null;
        while(m>0){
            prev=curr;
            curr=curr.next;
            m--;n--;
        }
        ListNode n1 = curr;
        while(n>0){
            curr=curr.next;
            n--;
        }
        ListNode n2 = curr;
        ListNode next=n2.next;
        
        curr=n1;
        ListNode tempprev = null;
        while(curr!=next){
            ListNode tempnext=curr.next;
            curr.next=tempprev;
            tempprev=curr;
            curr=tempnext;
        }
        
        prev.next=n2;
        n1.next=next;
        return dummy.next;
        
        
    }
}