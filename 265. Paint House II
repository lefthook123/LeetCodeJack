265. Paint House II


There are a row of n houses, each house can be painted with one of the k colors. The cost of painting each house with a certain color is different. You have to paint all the houses such that no two adjacent houses have the same color.

The cost of painting each house with a certain color is represented by a n x k cost matrix. For example, costs[0][0] is the cost of painting house 0 with color 0; costs[1][2] is the cost of painting house 1 with color 2, and so on... Find the minimum cost to paint all houses.

Note:
All costs are positive integers.

Follow up:
Could you solve it in O(nk) runtime?


public class Solution {
    public int MinCostII(int[,] costs) {
        int n = costs.GetLength(0);
        int k = costs.GetLength(1);
        if(n==0)return 0;
        int[,] dp = new int[n,k];
        
        int min=Int32.MaxValue;
        int min2=Int32.MaxValue;
        for(int i=0;i<k;i++){
            dp[0,i]=costs[0,i];
            if(dp[0,i]<=min){
                min2=min;min=dp[0,i];
            }else if(dp[0,i]<=min2){
                min2=dp[0,i];
            }
        }
        
        for(int i=1;i<n;i++){
            int tempmin=Int32.MaxValue;
            int tempmin2=Int32.MaxValue;
            for(int j=0;j<k;j++){
                dp[i,j]=dp[i-1,j]==min?min2+costs[i,j]:min+costs[i,j];
                if(dp[i,j]<=tempmin){
                    tempmin2=tempmin;tempmin=dp[i,j];
                }else if(dp[i,j]<=tempmin2){
                    tempmin2=dp[i,j];
                }
            }
            min=tempmin;
            min2=tempmin2;
        }
        return min;
    }
}