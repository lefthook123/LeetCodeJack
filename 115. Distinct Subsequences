115. Distinct Subsequences

Given a string S and a string T, count the number of distinct subsequences of T in S.

A subsequence of a string is a new string which is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (ie, "ACE" is a subsequence of "ABCDE" while "AEC" is not).

Here is an example:
S = "rabbbit", T = "rabbit"

Return 3.


public class Solution {
    public int NumDistinct(string s, string t) {
        
        int lens = s.Length;
        int lent = t.Length;
        
        if(lens<lent)return 0;
        
        //dp[i,j]: s[0] to s[i-1]   t[0] to t[i-1]
        //dp[0,j]: 0
        //dp[i,0]: 1
        int[,] dp = new int[lens+1,lent+1];
        for(int i=0;i<=lent;i++)dp[0,i]=0;
        for(int i=0;i<=lens;i++)dp[i,0]=1;
        
        //dp[i,j]= 
        for(int i=1;i<=lens;i++){
            for(int j=1;j<=lent;j++){
                dp[i,j]=dp[i-1,j]+(s[i-1]==t[j-1]?dp[i-1,j-1]:0);
            }
        }
        return dp[lens,lent];
        
    }
}
