216. Combination Sum III

Find all possible combinations of k numbers that add up to a number n, given that only numbers from 1 to 9 can be used and each combination should be a unique set of numbers.

Ensure that numbers within the set are sorted in ascending order.


Example 1:

Input: k = 3, n = 7

Output:

[[1,2,4]]

Example 2:

Input: k = 3, n = 9

Output:

[[1,2,6], [1,3,5], [2,3,4]]



public class Solution {
    public IList<IList<int>> CombinationSum3(int k, int n) {
        IList<IList<int>> result = new List<IList<int>>();
        IList<int> temp = new List<int>();
        CombinationSum3(result,temp,k,n,1,0);
        return result;
        
    }
    public void CombinationSum3(IList<IList<int>> result, IList<int> temp, int k, int n,int curr,int sum) {
        if(temp.Count==k){
            if(sum==n){
                result.Add(new List<int>(temp));return;
            }
            return;
        }
        if(sum>=n)return;
        for(int i=curr;i<=9;i++){
            temp.Add(i);
            CombinationSum3(result,temp,k,n,i+1,sum+i);
            temp.RemoveAt(temp.Count-1);
        }
    }
}