150. Evaluate Reverse Polish Notation

Evaluate the value of an arithmetic expression in Reverse Polish Notation.

Valid operators are +, -, *, /. Each operand may be an integer or another expression.

Some examples:
  ["2", "1", "+", "3", "*"] -> ((2 + 1) * 3) -> 9
  ["4", "13", "5", "/", "+"] -> (4 + (13 / 5)) -> 6




  public class Solution {
    public int EvalRPN(string[] tokens) {
        Stack<int> st = new Stack<int>();
        HashSet<string> opset = new HashSet<string>();
        opset.Add("+");opset.Add("*");opset.Add("-");opset.Add("/");
        for(int i=0;i<tokens.Length;i++){
            if(!opset.Contains(tokens[i])){
                st.Push(Convert.ToInt32(tokens[i]));
            }else{
                int right = st.Pop();
                int left = st.Pop();
                st.Push(calc(left,right,tokens[i]));
            }
        }
        return st.Peek();
    }
    
    public int calc(int left,int right,string op){
        switch(op){
            case "+":
                return left+right;
            case "-":
                return left-right;
            case "*":
                return left*right;
            case "/":
                return left/right;
            default:
                return 0;
        }
    }
}