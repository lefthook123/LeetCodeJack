270. Closest Binary Search Tree Value

Given a non-empty binary search tree and a target value, find the value in the BST that is closest to the target.

Note:
Given target value is a floating point.
You are guaranteed to have only one unique value in the BST that is closest to the target.


/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public int ClosestValue(TreeNode root, double target) {
        if(root==null)return -1;
        int closest = root.val;
        double mindiff = Math.Abs(Convert.ToDouble(root.val)-target);
        TreeNode curr = root;
        while(curr!=null){
            double v = Math.Abs(Convert.ToDouble(curr.val)-target);
            if(v<mindiff){
                mindiff=v;closest=curr.val;
            }
            if(curr.val<target){
                curr=curr.right;
            }else if(curr.val==target){
                return curr.val;
            }else{
                curr=curr.left;
            }
        }
        return closest;
    }
}