61. Rotate List

Given a list, rotate the list to the right by k places, where k is non-negative.

For example:
Given 1->2->3->4->5->NULL and k = 2,
return 4->5->1->2->3->NULL.



/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode RotateRight(ListNode head, int k) {
        
        int len = 0;
        ListNode curr=head;
        ListNode tail = null;
        while(curr!=null){
            len++;tail=curr;curr=curr.next;
        }
        if(len==0)return null;
        k=k%len;
        
        curr=head;
        ListNode slow = head;
        ListNode prev = null;
        while(k>0){
            curr=curr.next;k--;
        }
        while(curr!=null){
            curr=curr.next;prev=slow;slow=slow.next;
        }
        prev.next=null;
        if(slow==null)return head;
        tail.next=head;
        return slow;
        //slow is pointing to the secodn half
        
        
    }
}