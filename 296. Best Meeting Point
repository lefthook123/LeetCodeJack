296. Best Meeting Point


A group of two or more people wants to meet and minimize the total travel distance. You are given a 2D grid of values 0 or 1, where each 1 marks the home of someone in the group. The distance is calculated using Manhattan Distance, where distance(p1, p2) = |p2.x - p1.x| + |p2.y - p1.y|.

For example, given three people living at (0,0), (0,4), and (2,2):

1 - 0 - 0 - 0 - 1
|   |   |   |   |
0 - 0 - 0 - 0 - 0
|   |   |   |   |
0 - 0 - 1 - 0 - 0
The point (0,2) is an ideal meeting point, as the total travel distance of 2+2+2=6 is minimal. So return 6.


public class Solution {
    public int MinTotalDistance(int[,] grid) {
        int m = grid.GetLength(0);
        int n = grid.GetLength(1);
        List<int> xList = new List<int>();
        List<int> yList = new List<int>();
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(grid[i,j]==1)xList.Add(i);
            }
        }
        for(int j=0;j<n;j++){
            for(int i=0;i<m;i++){
                if(grid[i,j]==1)yList.Add(j);
            }
        }
        
        return getMin(xList)+getMin(yList);
    }
    
    public int getMin(List<int> lst){
        
        int i=0;
        int j=lst.Count-1;
        int sum=0;
        while(i<j){
            sum+=lst[j--]-lst[i++];
        }
        return sum;
    }
}