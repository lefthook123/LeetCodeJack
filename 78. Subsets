78. Subsets


Given a set of distinct integers, nums, return all possible subsets.

Note:
Elements in a subset must be in non-descending order.
The solution set must not contain duplicate subsets.
For example,
If nums = [1,2,3], a solution is:

[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
]



public class Solution {
    public IList<IList<int>> Subsets(int[] nums) {
        IList<IList<int>> result = new List<IList<int>>();
        IList<int> temp = new List<int>();
        Array.Sort(nums);
        for(int i=0;i<=nums.Length;i++){
            backtracking(result,i,0,temp,nums);
        }
        return result;
    }
    public void backtracking(IList<IList<int>> result,int size,int curr,IList<int> temp,int[] nums){
        if(temp.Count==size){
            result.Add(new List<int>(temp));return;
        }
        for(int i=curr;i<nums.Length;i++){
            temp.Add(nums[i]);
            backtracking(result,size,i+1,temp,nums);
            temp.RemoveAt(temp.Count-1);
        }
    }
}