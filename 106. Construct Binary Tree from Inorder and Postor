106. Construct Binary Tree from Inorder and Postorder Traversal

Given inorder and postorder traversal of a tree, construct the binary tree.

Note:
You may assume that duplicates do not exist in the tree.


/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode BuildTree(int[] inorder, int[] postorder) {
        if(inorder.Length==0||postorder.Length==0)return null;
        return BuildTree(inorder,0,inorder.Length-1,postorder,0,postorder.Length-1);
    }
    public TreeNode BuildTree(int[] inorder, int l1,int r1,int[] postorder,int l2,int r2) {
        if(l2>r2)return null;
        TreeNode root = new TreeNode(postorder[r2]);
        int i=l1;
        for(;i<=r1;i++){
            if(inorder[i]==postorder[r2])break;
        }
        
        
        root.left = BuildTree(inorder,l1,i-1,postorder,l2,l2+i-l1-1);
        root.right = BuildTree(inorder,i+1,r1,postorder,l2+i-l1,r2-1);
        return root;
        
    }
}