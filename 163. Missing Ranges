163. Missing Ranges

Given a sorted integer array where the range of elements are [lower, upper] inclusive, return its missing ranges.

For example, given [0, 1, 3, 50, 75], lower = 0 and upper = 99, return ["2", "4->49", "51->74", "76->99"].



public class Solution {
    public IList<string> FindMissingRanges(int[] nums, int lower, int upper) {
        IList<string> result = new List<string>();
        if(nums.Length==0){
            result.Add(builstr(lower,upper));return result;
        }
        if(lower<nums[0]){
            result.Add(builstr(lower,nums[0]-1));
        }
        for(int i=0;i<nums.Length-1;i++){
            if(nums[i]<nums[i+1]-1){
                int start = nums[i]+1;
                int end=nums[i+1]-1;
                start=Math.Max(lower,start);end=Math.Min(end,upper);
                if(start<=end)result.Add(builstr(start,end));
            }
        }
        if(upper>nums[nums.Length-1]){
            result.Add(builstr(nums[nums.Length-1]+1,upper));
        }
        return result;
    }
    public string builstr(int start,int end){
        if(start==end)return start.ToString();
        return start.ToString()+"->"+end.ToString();
    }
}