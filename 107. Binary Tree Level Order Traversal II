/*
107. Binary Tree Level Order Traversal II

Given a binary tree, return the bottom-up level order traversal of its nodes' values. (ie, from left to right, level by level from leaf to root).

For example:
Given binary tree {3,9,20,#,#,15,7},

    3
   / \
  9  20
    /  \
   15   7


[
  [15,7],
  [9,20],
  [3]
]
*/


/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public IList<IList<int>> LevelOrderBottom(TreeNode root) {
        IList<IList<int>> result = new List<IList<int>>();
        if(root==null)return result;
        Queue<TreeNode> q = new Queue<TreeNode>();
        q.Enqueue(root);
        
        while(q.Count>0){
            int size = q.Count;
            IList<int> level = new List<int>();
            for(int i=0;i<size;i++){
                TreeNode tn = q.Dequeue();
                level.Add(tn.val);
                if(tn.left!=null)q.Enqueue(tn.left);
                if(tn.right!=null)q.Enqueue(tn.right);
            }
            result.Insert(0,level);
        }
        return result;
    }
}




