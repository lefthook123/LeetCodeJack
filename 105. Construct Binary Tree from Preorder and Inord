105. Construct Binary Tree from Preorder and Inorder Traversal

Given preorder and inorder traversal of a tree, construct the binary tree.

Note:
You may assume that duplicates do not exist in the tree.



/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode BuildTree(int[] preorder, int[] inorder) {
        if(preorder.Length==0||inorder.Length==0)return null;
        return BuildTree(preorder,inorder,0,preorder.Length-1,0,inorder.Length-1);
    }
    public TreeNode BuildTree(int[] preorder, int[] inorder, int l1,int r1,int l2,int r2) {
        if(l1>r1)return null;
        TreeNode root = new TreeNode(preorder[l1]);
        int i=l2;
        for(;i<=r2;i++){
            if(inorder[i]==preorder[l1])break;
        }
        root.left = BuildTree(preorder,inorder,l1+1,l1-l2+i,l2,i-1);
        root.right = BuildTree(preorder,inorder,l1-l2+i+1,r1,i+1,r2);
        return root;
        
    }
}