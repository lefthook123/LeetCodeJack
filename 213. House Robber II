213. House Robber II

After robbing those houses on that street, the thief has found himself a new place for his thievery so that he will not get too much attention. This time, all houses at this place are arranged in a circle. That means the first house is the neighbor of the last one. Meanwhile, the security system for these houses remain the same as for those in the previous street.

Given a list of non-negative integers representing the amount of money of each house, determine the maximum amount of money you can rob tonight without alerting the police.


public class Solution {
    public int Rob(int[] nums) {
        //dp[i]= dp[i-1],dp[i-2]+nums[i]
        
        int n = nums.Length;
        if(n==0)return 0;
        if(n==1)return nums[0];
        if(n==2)return Math.Max(nums[0],nums[1]);
        //start from house 0 to house n-2
        int[] dp = new int[n];
        dp[0]=nums[0];
        dp[1]=Math.Max(nums[0],nums[1]);
        for(int i=2;i<n-1;i++)dp[i]=Math.Max(dp[i-1],dp[i-2]+nums[i]);
        int firstTry = dp[n-2];
        
        //start from house 1 to house n-1
        dp[1]=nums[1];
        dp[2]=Math.Max(nums[2],nums[1]);
        for(int i=3;i<n;i++)dp[i]=Math.Max(dp[i-1],dp[i-2]+nums[i]);
        int secondTry = dp[n-1];
        
        return Math.Max(firstTry,secondTry);
        
    }
}