24. Swap Nodes in Pairs

Given a linked list, swap every two adjacent nodes and return its head.

For example,
Given 1->2->3->4, you should return the list as 2->1->4->3.

Your algorithm should use only constant space. You may not modify the values in the list, only nodes itself can be changed.


/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode SwapPairs(ListNode head) {
        
        ListNode dummy = new ListNode(-1);
        dummy.next=head;
        ListNode curr = dummy.next;
        ListNode prev = dummy;

        
        while(curr!=null){

            if(curr.next==null)return dummy.next;
            ListNode next = curr.next.next;
            Reverse(prev,curr,curr.next,next);
            prev=curr;
            curr=next;
            
            
        }
        return dummy.next;
        
    }
    
    
    public void Reverse(ListNode prev,ListNode n1,ListNode n2,ListNode next){
        
        prev.next = n2;
        n2.next=n1;
        n1.next=next;
        
    }
}