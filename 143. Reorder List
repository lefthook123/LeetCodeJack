143. Reorder List


Given a singly linked list L: L0→L1→…→Ln-1→Ln,
reorder it to: L0→Ln→L1→Ln-1→L2→Ln-2→…

You must do this in-place without altering the nodes' values.

For example,
Given {1,2,3,4}, reorder it to {1,4,2,3}.



/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public void ReorderList(ListNode head) {
        if(head==null||head.next==null||head.next.next==null)return;
        ListNode slow = head;
        ListNode fast = head.next;
        while(fast!=null&&fast.next!=null){
            slow=slow.next;fast=fast.next.next;
        }
        //slow.next is the head;
        fast=slow.next;
        slow.next=null;
        
        //reverse the second half
        fast=reverse(fast);
        slow=head;
        
        
        ListNode curr=slow;slow=slow.next;
        while(fast!=null){
            curr.next=fast;
            fast=fast.next;
            curr=curr.next;
            if(slow!=null){
                curr.next=slow;
                slow=slow.next;
                curr=curr.next;
            }
            
        }
    }
    
    public ListNode reverse(ListNode head){
        ListNode curr = head;
        if(curr==null)return null;
        ListNode prev = null;
        ListNode next = null;
        while(curr!=null){
            next=curr.next;
            curr.next=prev;
            prev=curr;
            curr=next;
        }
        return prev;
    }
}